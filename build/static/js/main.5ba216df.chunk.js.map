{"version":3,"sources":["components/Canvas.js","components/Menu.js","app.js","index.js"],"names":["Canvas","props","updateCanvas","data","key","events","state","event","canvas","current","addEventListener","removeEventListener","canvasCss","width","window","innerWidth","height","innerHeight","boxSizing","position","changeWeight","ctx","lineWidth","changeColor","color","strokeStyle","hex","mousePaint","e","x","offsetX","y","offsetY","dx","movementX","dy","movementY","buttons","beginPath","moveTo","lineTo","stroke","closePath","mouseClear","clearRect","mouseAllClear","console","log","offsetWidth","offsetHeight","React","createRef","colorMouse","weight","this","getContext","pen","clear","allClear","prevProps","prevState","even","setState","style","ref","className","onChangeComplete","onClick","Component","Menu","stateGo","elem","menu","querySelectorAll","forEach","el","classList","add","remove","act","currentTarget","icon","faPen","faEraser","faSnowplow","src","App","actionClick","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ba216df.chunk.js","sourcesContent":["import React from 'react';\r\nimport { GithubPicker } from 'react-color';\r\n\r\nexport default class Canvas extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvas = React.createRef();\r\n    this.state = {\r\n      event: null,\r\n      colorMouse: '#000000',\r\n      weight: 3\r\n    }\r\n  }\r\n\r\n  ctx;\r\n  events\r\n\r\n\r\n  componentDidMount() {\r\n    this.ctx = this.canvas.current.getContext('2d');\r\n    this.events = {\r\n      pen: this.mousePaint(),\r\n      clear: this.mouseClear(),\r\n      allClear: this.mouseAllClear()\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n\r\n    if (this.props.even !== this.state.event) {\r\n      this.setState({ event: this.props.even })\r\n      this.updateCanvas(this.state.event);\r\n    }\r\n\r\n    if (prevState.weight == this.state.weight || prevState.colorMouse == this.state.colorMouse) {\r\n      this.updateCanvas(this.state.event);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  updateCanvas = (data) => {\r\n    for (let key in this.events) {\r\n      if (key == this.state.event && this.state.event !== 'allClear') {\r\n        this.canvas.current.addEventListener('mousemove', this.events[this.state.event]);\r\n      } else if (this.state.event == 'allClear') {\r\n        this.events[this.state.event]()\r\n      } else {\r\n        this.canvas.current.removeEventListener('mousemove', this.events[key]);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  canvasCss = {\r\n    width: window.innerWidth * 0.9,\r\n    height: window.innerHeight,\r\n    boxSizing: 'border-box',\r\n    position: 'relative'\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <canvas style={this.canvasCss} width={this.canvasCss.width} height={this.canvasCss.height} ref={this.canvas}></canvas>\r\n        {this.state.event == 'pen' ?\r\n          <div className=\"hideMenu\">\r\n            <GithubPicker onChangeComplete={(color) => this.changeColor(color)} />\r\n            <div className=\"weightReact\">\r\n              <span onClick={() => this.changeWeight(3)}></span>\r\n              <span onClick={() => this.changeWeight(10)}></span>\r\n              <span onClick={() => this.changeWeight(20)}></span>\r\n            </div>\r\n          </div>\r\n          : \"\"}\r\n      </>\r\n    );\r\n  }\r\n\r\n  changeWeight = (width) => {\r\n    this.ctx.lineWidth = width;\r\n  }\r\n\r\n\r\n  changeColor = (color) => {\r\n    this.ctx.strokeStyle = color.hex;\r\n  }\r\n\r\n  mousePaint = () => (e) => {\r\n    var x = e.offsetX;\r\n    var y = e.offsetY;\r\n    var dx = e.movementX;\r\n    var dy = e.movementY;\r\n\r\n    if (e.buttons > 0) {\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(x, y);\r\n      this.ctx.lineTo(x - dx, y - dy);\r\n      this.ctx.stroke();\r\n      this.ctx.closePath();\r\n    }\r\n\r\n  }\r\n\r\n  mouseClear = () => (e) => {\r\n    if (e.buttons > 0) {\r\n      this.ctx.clearRect(e.offsetX, e.offsetY, 20, 20);\r\n    }\r\n  }\r\n\r\n  mouseAllClear = () => (e) => {\r\n    console.log(this.canvas.offsetWidth)\r\n    this.ctx.clearRect(0, 0, this.canvas.current.offsetWidth, this.canvas.current.offsetHeight);\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPen, faEraser, faSnowplow, faSave, faDownload } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nexport default class Menu extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.menu = React.createRef();\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n        <div className=\"menu\">\r\n            <span className=\"paint\">Paint</span>\r\n            <ul className=\"menuItem\" ref={this.menu}>\r\n              <li onClick={(e) => {this.stateGo('pen', e.currentTarget)}}>\r\n                <FontAwesomeIcon icon={faPen}></FontAwesomeIcon>\r\n              </li>\r\n              <li onClick={(e) => this.stateGo('clear', e.currentTarget)}> \r\n                <FontAwesomeIcon icon={faEraser}></FontAwesomeIcon>\r\n              </li>\r\n              <li onClick={(e) => this.stateGo('allClear', e.currentTarget)}>\r\n                <FontAwesomeIcon icon={faSnowplow}></FontAwesomeIcon>\r\n              </li>\r\n            </ul>\r\n            <div className=\"logo\">\r\n                <img src=\"./img/logo.png\"/>\r\n                <img src=\"./img/logo-text.png\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  stateGo = (data, elem) => {\r\n    console.log(this.menu.current.querySelectorAll('li'))\r\n    this.menu.current.querySelectorAll('li').forEach(el => {\r\n      if(el == elem){\r\n        el.classList.add('activeMenu')\r\n      }else{\r\n        el.classList.remove('activeMenu')\r\n      }\r\n    })\r\n    this.props.act(data)\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport Canvas from './components/Canvas';\r\nimport Menu from './components/Menu';\r\nimport './css/app.scss'\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      action: null\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n        <div className=\"app\">\r\n            <Canvas even={this.state.action}></Canvas>\r\n            <Menu act={this.actionClick}></Menu>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  actionClick = (data) => {\r\n    this.setState({action: data});\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from \"./app\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}